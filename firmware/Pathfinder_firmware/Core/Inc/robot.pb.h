/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_ROBOT_PB_H_INCLUDED
#define PB_ROBOT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _RobotData {
    int32_t sensor_value_1;
    int32_t sensor_value_2;
    int32_t sensor_value_3;
    int32_t sensor_value_4;
    int32_t sensor_value_5;
    int32_t raw_angle_1;
    int32_t raw_angle_2;
    float x_pos;
    float y_pos;
    float theta;
} RobotData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define RobotData_init_default                   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define RobotData_init_zero                      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define RobotData_sensor_value_1_tag             1
#define RobotData_sensor_value_2_tag             2
#define RobotData_sensor_value_3_tag             3
#define RobotData_sensor_value_4_tag             4
#define RobotData_sensor_value_5_tag             5
#define RobotData_raw_angle_1_tag                6
#define RobotData_raw_angle_2_tag                7
#define RobotData_x_pos_tag                      8
#define RobotData_y_pos_tag                      9
#define RobotData_theta_tag                      10

/* Struct field encoding specification for nanopb */
#define RobotData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    sensor_value_1,    1) \
X(a, STATIC,   SINGULAR, INT32,    sensor_value_2,    2) \
X(a, STATIC,   SINGULAR, INT32,    sensor_value_3,    3) \
X(a, STATIC,   SINGULAR, INT32,    sensor_value_4,    4) \
X(a, STATIC,   SINGULAR, INT32,    sensor_value_5,    5) \
X(a, STATIC,   SINGULAR, INT32,    raw_angle_1,       6) \
X(a, STATIC,   SINGULAR, INT32,    raw_angle_2,       7) \
X(a, STATIC,   SINGULAR, FLOAT,    x_pos,             8) \
X(a, STATIC,   SINGULAR, FLOAT,    y_pos,             9) \
X(a, STATIC,   SINGULAR, FLOAT,    theta,            10)
#define RobotData_CALLBACK NULL
#define RobotData_DEFAULT NULL

extern const pb_msgdesc_t RobotData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define RobotData_fields &RobotData_msg

/* Maximum encoded size of messages (where known) */
#define ROBOT_PB_H_MAX_SIZE                      RobotData_size
#define RobotData_size                           92

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
